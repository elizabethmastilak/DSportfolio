#### Load Packages ####
library(tidyverse)
library(httr)
library(rvest)
library(magrittr)
# Setting user configuration for scraping Goodreads
set_config(user_agent("<mastilake@xavier.edu>; +https://www.xavier.edu/business-analytics-program"))
#| label: loading packages
library(knitr)
# Setting user configuration for scraping Goodreads
set_config(user_agent("<mastilake@xavier.edu>; +https://www.xavier.edu/business-analytics-program"))
hf_html <-
read_html("https://www.goodreads.com/shelf/show/historical-fiction")
bookTitle <-
hf_html %>%
html_elements("a.bookTitle") %>%
html_text2()
View(bookTitle)
authorName <-
hf_html %>%
html_elements("span.name") %>%
html_text2()
authorName <-
hf_html %>%
html_nodes('[itemprop="name"]') %>%
html_text2()
messyRatings <-
hf_html %>%
html_elements("span.greyText smallText") %>%
html_text2()
messyRatings <-
hf_html %>%
html_elements('span."greyText smallText"') %>%
html_text2()
messyRatings <-
hf_html %>%
html_nodes('.greyText.smallText') %>%
html_text2()
hf_data <-
tibble(bookTitle, authorName, messyRatings)
View(hf_data)
hf_data_messy <-
tibble(bookTitle, authorName, messyRatings)
hf_data <- hf_data_messy %>%
separate(messyRatings,
into = c("rating_info", "count_info", "published_info"),
sep = " — ",
extra = "merge",
fill = "right")
View(hf_data)
hf_data <- hf_data %>%
mutate(ratings = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric())
hf_data <- hf_data %>%
mutate(ratings = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
view()
hf_data <- hf_data %>%
mutate(ratings = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
select(-rating_info)
hf_data <- hf_data %>%
mutate(rating = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
select(-rating_info)
hf_data <- hf_data_messy %>%
separate(messyRatings,
into = c("rating_info", "count_info", "published_info"),
sep = " — ",
extra = "merge",
fill = "right")
hf_data <- hf_data %>%
mutate(rating = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
select(-rating_info)
hf_data <- hf_data %>%
mutate(ratingsCount = str_replace(count_info, " ratings$", "")) %>%
mutate(ratingsCount = as.numeric(ratingsCount)) %>%
select(-count_info)
hf_data <- hf_data %>%
mutate(ratingsCount = str_replace(count_info, " ratings$", "")) %>%
#mutate(ratingsCount = as.numeric(ratingsCount)) %>%
select(-count_info)
hf_data_messy <-
tibble(bookTitle, authorName, messyRatings)
hf_data <- hf_data_messy %>%
separate(messyRatings,
into = c("rating_info", "count_info", "published_info"),
sep = " — ",
extra = "merge",
fill = "right")
hf_data <- hf_data %>%
mutate(rating = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
select(-rating_info)
hf_data <- hf_data %>%
mutate(ratingsCount = str_replace(count_info, " ratings$", "")) %>%
#mutate(ratingsCount = as.numeric(ratingsCount)) %>%
select(-count_info)
hf_data <- hf_data %>%
mutate(ratingsCount = str_replace_all(",", "") %>% as.numeric())
hf_data <- hf_data %>%
mutate(ratingsCount = str_replace_all(",", ""))
hf_data <- hf_data %>%
mutate(ratingsCount = str_replace_all(ratingsCount, ",", "") %>%
as.numeric())
hf_data <- hf_data %>%
mutate(yearPublished = str_sub(published_info, -4, -1) %>%
as.numeric())
hf_data <- hf_data %>%
select(-published_info)
genres <- c("biography", "classics", "historical-fiction", "mystery")
hf_data <- hf_data %>%
mutate(genre = "Historical Fiction")
#### Load Packages ####
library(tidyverse)          # for dplyr and data wrangling
library(httr)               # for web authentication
library(rvest)              # for html tools
library(magrittr)           # for piping and loops
# Setting user configuration for scraping Goodreads
set_config(user_agent("<mastilake@xavier.edu>; +https://www.xavier.edu/business-analytics-program"))
# Setting user configuration for scraping Goodreads
set_config(user_agent("<mastilake@xavier.edu>; +https://www.xavier.edu/business-analytics-program"))
genres <- c("biography", "classics", "historical-fiction", "mystery")
gr_html <- "https://www.goodreads.com/shelf/show/"
GR_collect <- function(url) {
# Create a variable for the url to scrape
#url_to_scrape <- paste(url, genre, sep="")
gr_html <- read_html(url)
# Get book names
bookTitle <-
gr_html %>%
html_elements("a.bookTitle") %>%
html_text2()
# Get author names
authorName <-
gr_html %>%
html_nodes('[itemprop="name"]') %>%
html_text2()
# Get info about ratings and publishing
messyRatings <-
gr_html %>%
html_nodes('.greyText.smallText') %>%
html_text2()
# Turn it into a data frame
gr_data_messy <-
tibble(bookTitle, authorName, messyRatings)
# Clean up ratings and publishing
gr_data <- gr_data_messy %>%
separate(messyRatings,
into = c("rating_info", "count_info", "published_info"),
sep = " — ",
extra = "merge",
fill = "right")
# Rating
gr_data <- gr_data %>%
mutate(rating = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
select(-rating_info)
# Number of ratings
gr_data <- gr_data %>%
mutate(ratingsCount = str_replace(count_info, " ratings$", "")) %>%
select(-count_info)
gr_data <- gr_data %>%
mutate(ratingsCount = str_replace_all(ratingsCount, ",", "") %>%
as.numeric())
# Publication year
gr_data <- gr_data %>%
mutate(yearPublished = str_sub(published_info, -4, -1) %>%
as.numeric()) %>%
select(-published_info)
return(gr_data)
}
GR_scrape <- function(base_url, genre_list) {
all_books <- data.frame()
for (i in seq_along(genre_list)) {
print(paste("Collecting page",i))
all_books <-
GR_collect(paste(base_url, genre_list[i])) %>%
mutate(Genres = genre_list[i]) %>%
bind_rows(all_books)
print(paste(genre_list[i], "collected"))
print(paste(nrow(all_books), "books collected so far"))
if (i != length(genre_list)) {
Sys.sleep(runif(1,5,9))
}
}
return(all_books)
}
gr_test_df <- GR_scrape(gr_html, genres)
gr_test_df <- GR_scrape(gr_html, genres)
GR_scrape <- function(base_url, genre_list) {
all_books <- data.frame()
for (i in seq_along(genre_list)) {
print(paste("Collecting page",i))
all_books <-
GR_collect(paste(base_url, genre_list[i], sep="")) %>%
mutate(Genres = genre_list[i]) %>%
bind_rows(all_books)
print(paste(genre_list[i], "collected"))
print(paste(nrow(all_books), "books collected so far"))
if (i != length(genre_list)) {
Sys.sleep(runif(1,5,9))
}
}
return(all_books)
}
GR_collect <- function(url) {
# Create a variable for the url to scrape
#url_to_scrape <- paste(url, genre, sep="")
gr_html <- read_html(url)
# Get book names
bookTitle <-
gr_html %>%
html_elements("a.bookTitle") %>%
html_text2()
# Get author names
authorName <-
gr_html %>%
html_nodes('[itemprop="name"]') %>%
html_text2()
# Get info about ratings and publishing
messyRatings <-
gr_html %>%
html_nodes('.greyText.smallText') %>%
html_text2()
# Turn it into a data frame
gr_data_messy <-
tibble(bookTitle, authorName, messyRatings)
# Clean up ratings and publishing
gr_data <- gr_data_messy %>%
separate(messyRatings,
into = c("rating_info", "count_info", "published_info"),
sep = " — ",
extra = "merge",
fill = "right")
# Rating
gr_data <- gr_data %>%
mutate(rating = str_extract(rating_info, "\\d+\\.\\d+|\\d+") %>% as.numeric()) %>%
select(-rating_info)
# Number of ratings
gr_data <- gr_data %>%
mutate(ratingsCount = str_replace(count_info, " ratings$", "")) %>%
select(-count_info)
gr_data <- gr_data %>%
mutate(ratingsCount = str_replace_all(ratingsCount, ",", "") %>%
as.numeric())
# Publication year
gr_data <- gr_data %>%
mutate(yearPublished = str_sub(published_info, -4, -1) %>%
as.numeric()) %>%
select(-published_info)
return(gr_data)
}
gr_test_df <- GR_scrape(gr_html, genres)
View(gr_test_df)
?write_csv()
write_csv(gr_test_df, "goodreads_data.csv")
library(rvest)              # for html tools
library(httr)               # for web authentication
library(magrittr)           # for piping and loops
#### Load Packages ####
library(tidyverse)          # for dplyr and data wrangling
# Setting user configuration for scraping Goodreads
set_config(user_agent("<mastilake@xavier.edu>; +https://www.xavier.edu/business-analytics-program"))
#| label: loading in the CSV
gr_data <- read_csv("goodreads_data.csv")
View(gr_data)
#| label: loading in the CSV
gr_data <- read_csv("https://myxavier-my.sharepoint.com/:x:/g/personal/mastilake_xavier_edu/EVTRpLfJsIdIijXkn217kNIBXZudo9uhdQbOYojZKhiu4A?e=YxUQPf")
#| label: loading in the CSV
gr_data <- read_csv("https://myxavier-my.sharepoint.com/:x:/g/personal/mastilake_xavier_edu/EVTRpLfJsIdIijXkn217kNIBldiophYCSOu3X7lrH0aEBw?e=fdXWO7")
#| label: loading in the CSV
gr_data <- read_csv("https://myxavier-my.sharepoint.com/:x:/g/personal/mastilake_xavier_edu/EVTRpLfJsIdIijXkn217kNIBaHq5K9vIXL5DNPnYjbo2ag?download=1")
View(gr_data)
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "summary")
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "summary", fill = "steelblue") +
geom_labs(title = "Average Rating by Genre",
y = "Rating (Avg)")
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "summary", fill = "steelblue") +
geom_lab(title = "Average Rating by Genre",
y = "Rating (Avg)")
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "summary", fill = "steelblue") +
labs(title = "Average Rating by Genre",
y = "Rating (Avg)")
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "mean", fill = "steelblue") +
labs(title = "Average Rating by Genre",
y = "Rating (Avg)")
?geom_bar
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "count", fill = "steelblue") +
labs(title = "Average Rating by Genre",
y = "Rating (Avg)")
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "summary", fill = "steelblue") +
labs(title = "Average Rating by Genre",
y = "Rating (Avg)")
#| label: genre highest avg rate
gr_data %>%
ggplot(aes(x = Genres, y = rating)) +
geom_bar(stat = "summary", fun = "mean", fill = "steelblue") +
labs(title = "Average Rating by Genre",
y = "Rating (Avg)")
gr_data %>%
ggplot(x = yearPublished, y = ratingsCount) +
geom_point(fill = Genres)
gr_data %>%
ggplot(x = yearPublished, y = ratingsCount) +
geom_point()
gr_data %>%
ggplot(aes(x = yearPublished, y = ratingsCount)) +
geom_point()
#| label: r count by year 2
gr_data %>%
filter(yearPublished > 1400)
ggplot(aes(x = yearPublished, y = ratingsCount)) +
geom_point()
#| label: r count by year 2
gr_data %>%
filter(yearPublished > 1400) %>%
ggplot(aes(x = yearPublished, y = ratingsCount)) +
geom_point()
View(gr_data)
#| label: r count by year 2
gr_data %>%
filter(yearPublished > 1650) %>%
ggplot(aes(x = yearPublished, y = ratingsCount)) +
geom_point()
#| label: r count by year 2
gr_data %>%
filter(yearPublished > 1650) %>%
ggplot(aes(x = yearPublished, y = ratingsCount)) +
geom_point() +
labs(title = "Number of Ratings by Year Published",
x = "Year Published",
y = "Number of User Ratings")
#| label: rating and age 1
gr_data %>%
ggplot(aes(x = yearPublished, y = rating)) +
geom_point()
#| label: rating and age 1
gr_data %>%
ggplot(aes(x = yearPublished, y = rating)) +
geom_point() +
labs(title = "Rating by Year Published",
x = "Year Published",
y = "User Rating")
#| label: most read genre
gr_data %>%
ggplot(aes(x = Genres, y = ratingsCount)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Most Commonly Read Genre",
y = "Number of User Ratings")
#| label: rating and count
gr_data %>%
ggplot(aes(x = ratingsCount, y = rating)) +
geom_point() +
labs(title = "Rating by Year Published",
x = "Number of User Ratings",
y = "User Rating")
#| label: loading packages
library(knitr)              # for quarto functionality
library(tidyverse)          # for dplyr and data wrangling
library(httr)               # for web authentication
library(rvest)              # for html tools
library(magrittr)           # for piping and loops
setwd("C:/Users/eliza/OneDrive - Xavier University/Math/MATH 257/Final Project")
setwd("C:/Users/eliza/OneDrive - Xavier University/Math/MATH 257/Final Project")
